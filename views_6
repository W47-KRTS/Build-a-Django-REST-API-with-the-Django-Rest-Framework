from rest_framework import generics
from rest_framework.decorators import api_view
from rest_framework.response import Response
# from django.http import Http404
from django.shortcuts import get_list_or_404

from products.models import Product
from products.serializers import ProductSerializer


class ProductCreateAPIView(generics.CreateAPIView):
    queryset = Product.objects.all()
    serializer_class = ProductSerializer


    def perform_create(self, serializer):
        # serializer.save(user=self.request.user)
        title = serializer.validated_data.get('title')
        content = serializer.validated_data.get('content') or None
        if content is None:
            content = title
        serializer.save(content=content)
        #send a Django signal


product_create_view = ProductCreateAPIView.as_view()


class ProductDetailAPIView(generics.RetrieveAPIView):
    queryset = Product.objects.all() 
    serializer_class = ProductSerializer
    #lookup_field = 'pk'

product_detail_view = ProductDetailAPIView.as_view()


class ProductListAPIView(generics.ListAPIView):
    queryset = Product.objects.all() 
    serializer_class = ProductSerializer

product_list_view = ProductListAPIView.as_view()

@api_view(['GET', 'POST'])
def product_alt_view(request, *args, **kwargs):
    method = request.method # distinguish based on the request method

    if method =="GET":
        pass
        # urls_args ??
        # get request -> detail_view (get data)
        # list view (based of the url)
        queryset = Product.objects.all() # qs
        #serialize the queryset
        data = ProductSerializer(queryset, many=True).data
        return Response(data)
    if method == 'POST':
        # create an item
        serializer = ProductSerializer(data=request.data) #verify the data
        if serializer.is_valid(raise_exception=True):
            # instance = serializer.save()
            # instance = form.save()
            print(serializer.data)
            return Response(serializer.data) 
        return Response({"Invalid": "not good data"}, status=400)
